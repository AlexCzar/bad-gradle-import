buildscript {
	ext.kotlin_version = '1.1.51'

	repositories {
		maven { url = "https://repo.spring.io/libs-milestone" }
	}

	dependencies {
		// TODO: move to `plugins` block as soon as 2.0.0.RELEASE comes out
		classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.0.M5")
	}
}

plugins {
	id 'java'
	id 'groovy'
	id 'org.jetbrains.kotlin.jvm' version "1.1.51"
	id "org.jetbrains.kotlin.plugin.spring" version "1.1.51"
	id "org.jetbrains.kotlin.plugin.jpa" version "1.1.51"
	id "io.spring.dependency-management" version "1.0.3.RELEASE"
}
group 'io.czar.samples'
version '1.0'
apply plugin: "org.springframework.boot"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
repositories {
	jcenter()
	maven { url = "https://repo.spring.io/libs-milestone" }
}

dependencies {
	[
			kotlin("stdlib-jre8"),
			kotlin("reflect"),

			springBoot1("actuator"),
			springBoot1("starter-logging"),
			springBoot1("starter-security"),
			springBoot1("starter-web"),

			"org.springframework.data:spring-data-jpa",
			"org.springframework:spring-jdbc",
			"org.hibernate:hibernate-entitymanager",
			"com.h2database:h2",

			springSecurity1("config"),
			springSecurity1("web"),
			"org.postgresql:postgresql"
	].each { compile(it) }

	runtime(springBoot1("devtools"))

	[
			springBoot1("starter-test"),
			springSecurity1("test")
	].each { testCompile(it) }
}

compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

def kotlin(String module, String version = "1.1.51"){
	return "org.jetbrains.kotlin:kotlin-$module"
}

static def springBoot1(String module, String version = "") { return "org.springframework.boot:spring-boot-$module:$version" }

static def springSecurity1(String module, String version = "") {
	return "org.springframework.security:spring-security-$module:$version"
}
